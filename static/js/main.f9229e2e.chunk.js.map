{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectHandler","good","setState","prevState","newState","includes","splice","indexOf","push","this","title","length","firstPart","slice","join","secondPart","className","type","classNames","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gSAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAe,CACbC,aAAc,CAAC,Q,EAGjBC,cAAgB,SAACC,GAef,OAdA,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAQ,YAAOD,EAAUJ,cAQ/B,OANII,EAAUJ,aAAaM,SAASJ,GAClCG,EAASE,OAAOF,EAASG,QAAQN,GAAO,GAExCG,EAASI,KAAKP,GAGR,CACNF,aAAcK,MAIX,EAAKN,MAAMC,c,4CAGpB,WAAU,IAAD,OAELA,EACEU,KAAKX,MADPC,aAEEW,EAAQ,oBAUZ,GAR4B,IAAxBX,EAAaY,SACfD,EAAQ,qBAGkB,IAAxBX,EAAaY,SACfD,EAAK,UAAMX,EAAN,iBAGHA,EAAaY,QAAU,EAAG,CAC5B,IAAMC,EAAYb,EAAac,MAAM,GAAI,GAAGC,KAAK,MAC3CC,EAAahB,EAAac,OAAO,GAEvCH,EAAK,UAAME,EAAN,gBAAuBG,EAAvB,iBAGP,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,UACGN,EACD,qBAAKM,UAAU,oBACf,wBACEC,KAAK,SACLD,UACEE,IACE,cACA,CACE,wBAAiD,IAAxBnB,EAAaY,SAI5CQ,QAAS,kBAAM,EAAKjB,SAClB,CAAEH,aAAc,MAXpB,sBAiBF,oBAAIiB,UAAU,YAAd,SACGpB,EAAgBwB,KAAI,SAACnB,GAAD,OACnB,qBAAIe,UAAU,YAAd,UACE,mBACEA,UAAWE,IACT,iBACA,CACE,2BAA4BnB,EAAaM,SAASJ,KAJxD,SAQGA,IAEH,wBACEgB,KAAK,SACLD,UAAWE,IACT,mBACA,CACE,6BAA8BnB,EAAaM,SAASJ,KAGxDkB,QAAS,kBAAM,EAAKnB,cAAcC,IARpC,SAUGF,EAAaM,SAASJ,GACnB,SACA,aAvBuBA,e,GApEzBoB,IAAMC,WAqGTzB,IC1Hf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f9229e2e.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\nimport './reset.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  selectedGood: string[];\n};\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  selectHandler = (good: string) => {\n    this.setState((prevState) => {\n      const newState = [...prevState.selectedGood];\n\n      if (prevState.selectedGood.includes(good)) {\n        newState.splice(newState.indexOf(good), 1);\n      } else {\n        newState.push(good);\n      }\n\n      return ({\n        selectedGood: newState,\n      });\n    });\n\n    return this.state.selectedGood;\n  };\n\n  render() {\n    const {\n      selectedGood,\n    } = this.state;\n    let title = 'No goods selected';\n\n    if (selectedGood.length === 0) {\n      title = 'No goods selected';\n    }\n\n    if (selectedGood.length === 1) {\n      title = `${selectedGood} is selected`;\n    }\n\n    if (selectedGood.length >= 2) {\n      const firstPart = selectedGood.slice(0, -1).join(', ');\n      const secondPart = selectedGood.slice(-1);\n\n      title = `${firstPart} and ${secondPart} are selected`;\n    }\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">\n          {title}\n          <div className=\"app__title--gap\" />\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'app__button',\n                {\n                  'app__button--selected': selectedGood.length === 0,\n                },\n              )\n            }\n            onClick={() => this.setState(\n              { selectedGood: [] },\n            )}\n          >\n            Clear\n          </button>\n        </h1>\n        <ul className=\"app__list\">\n          {goodsFromServer.map((good) => (\n            <li className=\"app__item\" key={good}>\n              <p\n                className={classNames(\n                  'app__item-good',\n                  {\n                    'app__item-good--selected': selectedGood.includes(good),\n                  },\n                )}\n              >\n                {good}\n              </p>\n              <button\n                type=\"button\"\n                className={classNames(\n                  'app__item-button',\n                  {\n                    'app__item-button--selected': selectedGood.includes(good),\n                  },\n                )}\n                onClick={() => this.selectHandler(good)}\n              >\n                {selectedGood.includes(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}